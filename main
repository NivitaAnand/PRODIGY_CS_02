from PIL import Image
import numpy as np

def encrypt_image(input_path, output_path, key):
    # Load the image
    image = Image.open(input_path)
    pixels = np.array(image)

    # Get image dimensions
    height, width, channels = pixels.shape

    # Apply encryption (example: XOR each pixel value with a key)
    encrypted_pixels = np.bitwise_xor(pixels, key)

    # Save the encrypted image
    encrypted_image = Image.fromarray(encrypted_pixels)
    encrypted_image.save(output_path)

def decrypt_image(input_path, output_path, key):
    # Load the encrypted image
    encrypted_image = Image.open(input_path)
    encrypted_pixels = np.array(encrypted_image)

    # Get image dimensions
    height, width, channels = encrypted_pixels.shape

    # Apply decryption (reverse the XOR operation with the same key)
    decrypted_pixels = np.bitwise_xor(encrypted_pixels, key)

    # Save the decrypted image
    decrypted_image = Image.fromarray(decrypted_pixels)
    decrypted_image.save(output_path)


input_image_path = 'input.jpg'  # Input image path
encrypted_image_path = 'encrypted.png'  # Encrypted image path
decrypted_image_path = 'decrypted.jpg'  # Decrypted image path
encryption_key = 42  # Simple encryption key for XOR operation

encrypt_image(input_image_path, encrypted_image_path, encryption_key)
decrypt_image(encrypted_image_path, decrypted_image_path, encryption_key)

print("Encryption and Decryption completed.")
